apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    def SDK_NAME = "eventdispatcher"
    def SDK_VERSION = "_${defaultConfig.versionName}"
    def sdkDestinationPath = "build/makeJar/"
    def zipFile = file('build/intermediates/packaged-classes/release/classes.jar')

    task deleteBuild(type: Delete) {
//        delete sdkDestinationPath + SDK_NAME + SDK_VERSION + ".jar"
        delete sdkDestinationPath + SDK_NAME + ".jar"
    }

    task makeJar(type: Jar) {
        from zipTree(zipFile)
//        baseName = SDK_NAME + SDK_VERSION
        baseName = SDK_NAME
        destinationDir = file(sdkDestinationPath)
    }

    makeJar.dependsOn(deleteBuild, build)

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    compileOnly project(path: ':eventdispatcher-stub')
}

publish {
    repoName = 'young'
    userOrg = 'zhipengzhong'
    groupId = 'young.eventdispatcher'
    artifactId = 'eventdispatcher'
    publishVersion = '1.0.1'
    desc = ''
    website = 'https://github.com/zhipengzhong/EventDispatcherSample'
}